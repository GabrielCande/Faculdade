  Uma condição de corrida é um problema de depuração que ocorre quando threads distintos acessam uma variável compartilhada ao mesmo tempo, assim as threads "correm" para ver qual será capaz de armazenar o valor por último na variável compartilhada em questão. Para evitar tal problema, é necessário se certificar de que não exista mais de uma thread utilizando um recurso ao mesmo tempo, sendo assim, a situação pode ser ao verificar regiões críticas do código, eleminando variáveis compartilhadas e utilizando locking para garantir que sejam utilizadas apenas por uma thread, e utilizando sincronização de threads no código.  
